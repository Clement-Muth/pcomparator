openapi: 3.1.0
info:
  title: Price Comparator API
  description: An API for comparing prices of foods, cosmetics and more.
  version: 1.0.0
servers:
  - url: https://pcomparator.vercel.app/api
    description: The production server.
paths:
  /v1/user/{id}/account:
    delete:
      operationId: deleteAccount
      summary: Delete user account.
      description: This operation permanently deletes the account associated with the
        specified user ID. This action is irreversible and removes all
        information linked to this account.
      parameters:
        - in: path
          description: id of the user
          name: id
          required: true
          example: 1bc0956b-c517-4b91-a3ca-1ebea5c60440
          schema:
            type: string
      requestBody:
        description: No request body is required for this operation.
        content: {}
      responses:
        "204":
          description: The account was deleted successfully.
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: &a1
                type: object
                properties:
                  message:
                    type: string
                    example: The request is malformed or contains invalid parameters. Please check
                      the data provided.
                  name:
                    type: string
                    example: HTTPError
                  status:
                    type: integer
                    example: 400
                  cause:
                    type: string
                    example: error cause
                required:
                  - message
                  - name
                  - status
                  - cause
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: &a2
                type: object
                properties:
                  error:
                    type: string
                    example: The requested resource could not be found.
                required:
                  - error
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: &a3
                type: object
                properties:
                  error:
                    type: string
                    example: A similar entry already exists.
                required:
                  - error
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: &a4
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error.
                required:
                  - error
  /v1/prices:
    post:
      operationId: createPrice
      summary: Create a new price
      description: Creates a new price entry for a product, allowing users to add
        price information for a product found in a specific store. The route
        accepts details such as the product's barcode, name, brand, category,
        store location, price, and a link to a proof image. This enables the
        application to update its database with current prices from various
        stores, helping users compare prices effectively.
      requestBody:
        description: The price to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode:
                  type: string
                  example: "8690804407383"
                  description: Unique identifier for the product in barcode format
                storeName:
                  type: string
                  example: Auchan
                  description: Name of the store where the product is sold
                productName:
                  type: string
                  example: Nutella
                  description: Name of the product
                categoryName:
                  type: string
                  example: Pate a tartiner
                  description: Category of the product
                brandName:
                  type: string
                  example: Ferrero
                  description: Brand or manufacturer of the product
                location:
                  type: string
                  example: 4 rue du dome, 67000, Strasbourg
                  description: Address of the store where the product was found
                amount:
                  type: number
                  exclusiveMinimum: 0
                  example: 9.99
                  description: Price of the product
                proof:
                  type: string
                  example: https://pcomparator/files
                  description: Link to an image or file providing proof of the price
                currency:
                  type: string
                  enum:
                    - EUR
                    - USD
                    - GBP
                    - CHF
                    - AUD
                    - CAD
                    - CNY
                    - JPY
                    - AED
                  example: EUR
                  description: Currency used for the product price
              required:
                - barcode
                - storeName
                - productName
                - categoryName
                - brandName
                - location
                - amount
                - proof
                - currency
      responses:
        "201":
          description: The burger was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 010f21e3-c5b9-4d91-a5b1-b713d2324b17
                  barcode:
                    type: string
                    minLength: 1
                    example: "8690804407383"
                  name:
                    type: string
                    minLength: 1
                    example: Nutella
                  description:
                    type:
                      - string
                      - "null"
                    minLength: 1
                    example: Nutella is a sweet hazelnut and cocoa spread made by Ferrero.
                  categoryId:
                    type:
                      - string
                      - "null"
                    format: uuid
                    example: 77230970-93e1-46ed-9797-85fc96d7eb0b
                  brandId:
                    type:
                      - string
                      - "null"
                    format: uuid
                    example: d0ecb566-74ee-4409-aeb3-31f30985a6f4
                  nutritionScore:
                    type: "null"
                    example: ""
                  createdAt:
                    type: string
                    example: 2024-11-16T23:04:56.060Z
                  updatedAt:
                    type: string
                    example: 2024-11-16T23:04:56.060Z
                required:
                  - id
                  - barcode
                  - name
                  - createdAt
                  - updatedAt
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/user/{id}/profile:
    patch:
      operationId: updateUserProfile
      summary: Update User Profile
      description: This operation updates the profile information of the user
        identified by the specified user ID. Users can update their profile
        details such as name, phone, and other relevant information.
      parameters:
        - in: path
          description: id of the user
          name: id
          required: true
          example: 1bc0956b-c517-4b91-a3ca-1ebea5c60440
          schema:
            type: string
      requestBody:
        description: The profile data to update. This should include the fields that
          need to be modified.
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  default: "+33666666666"
                  example: "+33666666666"
                  description: Phone number of the user
                name:
                  type: string
                storeName:
                  type: string
                  default: Clément Muth
                  example: Clément Muth
                  description: Name of the user
            example:
              phone: "+33666666666"
              name: Clément Muth
      responses:
        "200":
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 010f21e3-c5b9-4d91-a5b1-b713d2324b17
                  name:
                    type: string
                    minLength: 1
                    maxLength: 25
                    example: Clément Muth
                  phone:
                    type:
                      - string
                      - "null"
                    example: "+33666666666"
                  image:
                    type: string
                    example: https://pcomparator/images
                required:
                  - id
                  - name
                  - phone
                  - image
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/user/{id}/profile/avatar:
    patch:
      operationId: " updateUserAvatar"
      summary: Update User Avatar
      description: This operation updates the avatar of the user identified by the
        specified user ID. Users can upload a new avatar image file to update
        their profile picture.
      parameters:
        - in: path
          description: id of the user
          name: id
          required: true
          schema:
            type: string
        - in: query
          description: ""
          name: filename
          required: true
          schema:
            type: string
      requestBody:
        description: The avatar image to upload. This should be a file object
          representing the new avatar.
        content:
          multipart/form-data:
            schema: {}
      responses:
        "200":
          description: Avatar updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                    format: uri
                    example: https://pcomparator.vercel.app/avatars/new-avatar.png
                required:
                  - image
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/user/{id}/prices:
    get:
      operationId: listPrices
      summary: List user prices.
      description: This operation retrieves a list of prices added by the specified
        user. The list includes detailed information for each price entry, such
        as the product name, price, location, and date added. This allows the
        user to review all their contributed price information in one place.
      parameters:
        - in: path
          description: id of the user
          name: id
          example: 1bc0956b-c517-4b91-a3ca-1ebea5c60440
          required: true
          schema:
            type: string
      requestBody:
        description: No request body is required for this operation.
        content: {}
      responses:
        "200":
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                type:
                  - array
                  - "null"
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    productId:
                      type: string
                      format: uuid
                    storeId:
                      type: string
                      format: uuid
                    amount:
                      type: number
                      minimum: 0
                    currency:
                      type: string
                      enum:
                        - EUR
                        - USD
                        - GBP
                        - CHF
                        - AUD
                        - CAD
                        - CNY
                        - JPY
                        - AED
                    priceProofImage:
                      type:
                        - string
                        - "null"
                      format: uri
                    dateRecorded:
                      type:
                        - string
                        - "null"
                    storeName:
                      type: number
                      minimum: 0
                      default: 2.99
                      example: 2.99
                      description: Amount of the price
                    product:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        barcode:
                          type: string
                          minLength: 1
                        name:
                          type: string
                          minLength: 1
                        description:
                          type:
                            - string
                            - "null"
                          minLength: 1
                        categoryId:
                          type:
                            - string
                            - "null"
                          format: uuid
                        brandId:
                          type:
                            - string
                            - "null"
                          format: uuid
                        nutritionScore:
                          type: "null"
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                      required:
                        - id
                        - barcode
                        - name
                        - createdAt
                        - updatedAt
                    store:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                          minLength: 1
                        location:
                          type: string
                          minLength: 1
                        websiteUrl:
                          type:
                            - string
                            - "null"
                          format: uri
                      required:
                        - id
                        - name
                        - location
                  required:
                    - id
                    - productId
                    - storeId
                    - amount
                    - currency
                    - storeName
                    - product
                    - store
        "204":
          description: The account was deleted successfully.
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/user/{id}/prices/{priceId}:
    delete:
      operationId: deleteUserPrice
      summary: Delete a user price.
      description: This operation allows the specified user to delete a specific price
        entry they previously added. When executed, the request removes the
        selected price entry from the database, ensuring it no longer appears in
        search results or in the user's list of contributed prices. This action
        is permanent and requires user authentication to confirm their identity.
        The operation enhances data control by enabling users to manage and
        curate their submitted pricing information.
      parameters:
        - in: path
          description: id of the user
          name: id
          required: true
          example: 1bc0956b-c517-4b91-a3ca-1ebea5c60440
          schema:
            type: string
        - in: path
          description: id of the price to delete
          name: priceId
          example: 390c21e2-5c18-4d85-8f40-9ea3486b2675
          required: true
          schema:
            type: string
      requestBody:
        description: No request body is required for this operation.
        content: {}
      responses:
        "204":
          description: The price was deleted successfully.
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/prices/search:
    get:
      operationId: searchPrices
      summary: Search for a price
      description: Creates a new price entry for a product, allowing users to add
        price information for a product found in a specific store. The route
        accepts details such as the product's barcode, name, brand, category,
        store location, price, and a link to a proof image. This enables the
        application to update its database with current prices from various
        stores, helping users compare prices effectively.
      parameters:
        - in: query
          name: q
          description: Defines the type of activity log entries to retrieve, such as
            "date" or "id"
          example: date
          schema:
            type: string
            example: id
          required: true
      requestBody:
        description: The price to create.
        content: {}
      responses:
        "200":
          description: The burger was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  prices:
                    type:
                      - array
                      - "null"
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        productId:
                          type: string
                          format: uuid
                        storeId:
                          type: string
                          format: uuid
                        amount:
                          type: number
                          minimum: 0
                        currency:
                          type: string
                          enum:
                            - EUR
                            - USD
                            - GBP
                            - CHF
                            - AUD
                            - CAD
                            - CNY
                            - JPY
                            - AED
                        priceProofImage:
                          type:
                            - string
                            - "null"
                          format: uri
                        dateRecorded:
                          type:
                            - string
                            - "null"
                        product:
                          type:
                            - object
                            - "null"
                          properties:
                            id:
                              type: string
                              format: uuid
                            barcode:
                              type: string
                              minLength: 1
                            name:
                              type: string
                              minLength: 1
                            description:
                              type:
                                - string
                                - "null"
                              minLength: 1
                            categoryId:
                              type:
                                - string
                                - "null"
                              format: uuid
                            brandId:
                              type:
                                - string
                                - "null"
                              format: uuid
                            nutritionScore:
                              type: "null"
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                          required:
                            - id
                            - barcode
                            - name
                            - createdAt
                            - updatedAt
                        store:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                              minLength: 1
                            location:
                              type: string
                              minLength: 1
                            websiteUrl:
                              type:
                                - string
                                - "null"
                              format: uri
                          required:
                            - id
                            - name
                            - location
                      required:
                        - id
                        - productId
                        - storeId
                        - amount
                        - currency
                        - product
                        - store
                  reason:
                    type:
                      - string
                      - "null"
                    const: NO_PRICES
                required:
                  - prices
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4
  /v1/products/{barcode}:
    post:
      operationId: createProduct
      summary: Create a product
      description: Creates a new product entry, allowing users to add price
        information for a product found in a specific store. The route accepts
        details such as the product's barcode, name, brand, category, store
        location, price, and a link to a proof image. This enables the
        application to update its database with current prices from various
        stores, helping users compare prices effectively.
      parameters:
        - in: path
          name: barcode
          description: barcode of the new product
          example: "876456789"
          schema:
            type: string
            example: "876456789"
          required: true
      requestBody:
        description: The product to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                categoryName:
                  type: string
                brandName:
                  type: string
              required:
                - productName
                - categoryName
                - brandName
      responses:
        "200":
          description: The burger was created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    productId:
                      type: string
                      format: uuid
                    storeId:
                      type: string
                      format: uuid
                    amount:
                      type: number
                      minimum: 0
                    currency:
                      type: string
                      enum:
                        - EUR
                        - USD
                        - GBP
                        - CHF
                        - AUD
                        - CAD
                        - CNY
                        - JPY
                        - AED
                    priceProofImage:
                      type:
                        - string
                        - "null"
                      format: uri
                    dateRecorded:
                      type:
                        - string
                        - "null"
                    product:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        barcode:
                          type: string
                          minLength: 1
                        name:
                          type: string
                          minLength: 1
                        description:
                          type:
                            - string
                            - "null"
                          minLength: 1
                        categoryId:
                          type:
                            - string
                            - "null"
                          format: uuid
                        brandId:
                          type:
                            - string
                            - "null"
                          format: uuid
                        nutritionScore:
                          type: "null"
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                      required:
                        - id
                        - barcode
                        - name
                        - createdAt
                        - updatedAt
                    store:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                          minLength: 1
                        location:
                          type: string
                          minLength: 1
                        websiteUrl:
                          type:
                            - string
                            - "null"
                          format: uri
                      required:
                        - id
                        - name
                        - location
                  required:
                    - id
                    - productId
                    - storeId
                    - amount
                    - currency
                    - product
                    - store
        "400":
          description: The request is malformed or contains invalid parameters. Please
            check the data provided.
          content:
            application/json:
              schema: *a1
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema: *a2
        "409":
          description: A similar entry already exists.
          content:
            application/json:
              schema: *a3
        "500":
          description: Internal server error. Something went wrong on the server side.
          content:
            application/json:
              schema: *a4

